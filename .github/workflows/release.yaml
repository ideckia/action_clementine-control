name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      CMD_NAME: clementine-control
      HAXE_VERSION: latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install lix, haxe ${{ env.HAXE_VERSION }} and dependencies
      run: |
            npm i -g lix
            lix install haxe ${{ env.HAXE_VERSION }}
            lix download

    - name: Compile project
      run: haxe deploy.hxml

    - name: Install node.js dependencies
      run: npm install

    - name: Get the basic protobufjs
      run: |
        mkdir -p node_modules/protobufjs_min
        cp node_modules/protobufjs/index.js node_modules/protobufjs_min
        cp node_modules/protobufjs/package.json node_modules/protobufjs_min
        cp -r node_modules/protobufjs/src node_modules/protobufjs_min
        rm -rf node_modules/protobufjs
        rm -rf node_modules/@types
        mv node_modules/protobufjs_min node_modules/protobufjs

    - name: Package to release
      run: |
        mkdir ${{ env.CMD_NAME }}
        mv index.js ${{ env.CMD_NAME }}
        mv presets.json ${{ env.CMD_NAME }}
        mv readme.md ${{ env.CMD_NAME }}
        mv node_modules ${{ env.CMD_NAME }}
        echo '{"repository": "http://github.com/${{ github.repository }}","filename": "${{ env.CMD_NAME }}.zip","version": "${{ github.ref_name }}"}' > ${{ env.CMD_NAME }}/.info
        zip -r ${{ env.CMD_NAME }} ${{ env.CMD_NAME }}

    - name: Release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        files: ${{ env.CMD_NAME }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
